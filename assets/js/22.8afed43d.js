(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{627:function(t,e,s){t.exports=s.p+"assets/img/cache.264b3c83.png"},628:function(t,e,s){t.exports=s.p+"assets/img/FIFO.ad7466f6.png"},629:function(t,e,s){t.exports=s.p+"assets/img/Frequently.46c13a98.png"},630:function(t,e,s){t.exports=s.p+"assets/img/recently.41fd5119.png"},631:function(t,e,s){t.exports=s.p+"assets/img/max-age.44f6cec8.png"},883:function(t,e,s){"use strict";s.r(e);var a=s(7),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_2-5-缓存、清理缓存和http缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-缓存、清理缓存和http缓存"}},[t._v("#")]),t._v(" 2.5 缓存、清理缓存和HTTP缓存")]),t._v(" "),a("h3",{attrs:{id:"_2-5-1-缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-1-缓存"}},[t._v("#")]),t._v(" 2.5.1 缓存")]),t._v(" "),a("ul",[a("li",[t._v("缓存将被用到的数据，让数据访问更快\n"),a("ul",[a("li",[t._v("命中：在缓存中找到了请求的数据")]),t._v(" "),a("li",[t._v("不命中/穿透：缓存中没有需要的数据")]),t._v(" "),a("li",[t._v("命中率：命中次数/总次数")]),t._v(" "),a("li",[t._v("缓存大小：缓存中一共可以存多少数据")]),t._v(" "),a("li",[t._v("清空策略：如果缓存空间不够数据如何让被替换")])])])]),t._v(" "),a("img",{attrs:{width:"300px",src:s(627)}}),t._v(" "),a("h4",{attrs:{id:"清空策略-fifo"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#清空策略-fifo"}},[t._v("#")]),t._v(" 清空策略（FIFO）")]),t._v(" "),a("p",[t._v("这是一种清空策略，它是先进先出；假如我们现在有100条数据，存储的方向是从一个链表的尾部插入，从一个链表的头部取出；假设我们是这样的一个算法。\n当我们现有的数据小于100的时候，我们可以一直存入；当现有数据等于100的时候，我们每存入一个就需要取出一个，从头部存入，从尾部取出；这样就会产生一个结果，\n我们最早存入的数据最早取出，这样就构成了先进先出。")]),t._v(" "),a("img",{attrs:{width:"500px",src:s(628)}}),t._v(" "),a("h4",{attrs:{id:"lru-least-frequently-used-使用频率最低的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lru-least-frequently-used-使用频率最低的"}},[t._v("#")]),t._v(" LRU-Least Frequently used(使用频率最低的)")]),t._v(" "),a("p",[t._v("当缓存不够时，优先清除使用频率最低的")]),t._v(" "),a("img",{attrs:{width:"500px",src:s(629)}}),t._v(" "),a("h4",{attrs:{id:"lru-least-recently-used-最近使用的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lru-least-recently-used-最近使用的"}},[t._v("#")]),t._v(" LRU-Least recently used(最近使用的)")]),t._v(" "),a("p",[t._v("假如最近一年前的记录，最近使用了，会更新成最近的")]),t._v(" "),a("img",{attrs:{width:"500px",src:s(630)}}),t._v(" "),a("h3",{attrs:{id:"_2-5-2-http缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-2-http缓存"}},[t._v("#")]),t._v(" 2.5.2 http缓存")]),t._v(" "),a("p",[t._v("http缓存，主要是通过协议头，分别为协商缓存和强制缓存。")]),t._v(" "),a("h4",{attrs:{id:"缓存策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存策略"}},[t._v("#")]),t._v(" 缓存策略")]),t._v(" "),a("p",[t._v("当浏览器第一次加载资源时，服务端可以在响应头中返回缓存策略，浏览器会把这些缓存策略放在缓存中，当以后再次请求时浏览器通过"),a("code",[t._v("expires")]),t._v("和"),a("code",[t._v("cache-control")]),t._v("判断是否命中缓存且没有过期，如果命中返回200状态码并从缓存中读取数据，如果没有命中强缓存，浏览器会发送一个请求并携带"),a("code",[t._v("last-modified")]),t._v("、"),a("code",[t._v("e-tag")]),t._v("咨询服务端资源是否过期，如果服务端返回304状态码，说明没过期让浏览器从缓存中读取，如果过期了浏览器则会重新请求资源。")]),t._v(" "),a("h4",{attrs:{id:"cache-control"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cache-control"}},[t._v("#")]),t._v(" 🍅 Cache-Control "),a("Badge",{attrs:{text:"重要",type:"tip"}})],1),t._v(" "),a("p",[t._v("这个头定义所有缓存都要遵守的行为，不管是协商缓存还是强制缓存")]),t._v(" "),a("ul",[a("li",[t._v("可缓存性（要不要缓存）")])]),t._v(" "),a("p",[t._v("大体有2种情况，一种是客户端要不要缓存，还有一种是中间方要不要缓存；因为我们一个请求从发出到响应可能还经历了其他服务器，可能还经过中间的代理服务器，这里定义了中间的服务器它们需不需缓存。")]),t._v(" "),a("p",[t._v("如果允许中间方缓存就定义成"),a("code",[t._v("public")]),t._v("。")]),t._v(" "),a("p",[t._v("如果不允许中间方缓存，只允许端缓存我们就定义成"),a("code",[t._v("private")]),t._v("。")]),t._v(" "),a("p",[t._v("如果需要所有人都不缓存那就定义成"),a("code",[t._v("no-store")]),t._v("。")]),t._v(" "),a("p",[t._v("如果你希望要不要缓存是一个协商的行为，那么你可以用"),a("code",[t._v("no-cache")]),t._v(",就是每次请求前先问一下服务端是不是最新的，如果不是最新的就不用再次请求。")]),t._v(" "),a("p",[t._v("这几个值可以组合。")]),t._v(" "),a("ul",[a("li",[t._v("可缓存性")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("值")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("public")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("允许所有方缓存")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("private")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("只允许浏览器缓存")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("no-cache")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("每次必须先询问服务器资源是都已经更新")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("no-store")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("禁止缓存")])])])]),t._v(" "),a("ul",[a("li",[t._v("缓存期限（要不要缓存）")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("值")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("含义")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("max-age")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("秒（存储周期）")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("s-maxage")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("秒（共享缓存如代理等，存储周期）")])])])]),t._v(" "),a("h4",{attrs:{id:"cache-control-常用用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cache-control-常用用法"}},[t._v("#")]),t._v(" Cache-Control 常用用法")]),t._v(" "),a("p",[t._v("不同文件，"),a("code",[t._v("cache-control")]),t._v("不同的用法：")]),t._v(" "),a("p",[t._v("第一个文件：react、vue、jquery这些库我们会把期限设置成最大，原因是这种更新周期是非常慢的，如果要更新这个文件我们可以更改文件名的hash值，这样文件名变了又可以请求新的文件了。如果我们什么都不写，就是允许公有方，像cdn、代理服务器它们都可以缓存这个文件。")]),t._v(" "),a("p",[t._v("第二个文件：这种自己的库，会设置成private，就是我们不允许中间方缓存，这里面可能有我们敏感的算法；造成不必要的麻烦，如果变化不大的情况下，max-age也设置成很大的值。")]),t._v(" "),a("p",[t._v("第三个文件：变化情况不大的情况下，max-age可以设置成很大的值。")]),t._v(" "),a("p",[t._v("第四个文件：图片的名字也没有带hash，可能存在一个更新问题，所以我们把它的时间设置成一天。")]),t._v(" "),a("img",{attrs:{width:"500px",src:s(631)}}),t._v(" "),a("h4",{attrs:{id:"强制缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#强制缓存"}},[t._v("#")]),t._v(" 🍅 强制缓存 "),a("Badge",{attrs:{text:"重要",type:"tip"}})],1),t._v(" "),a("p",[t._v("强制使用缓存，不去服务器对比；（缓存生效不再发送请求）")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Cache"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("control"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("max"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("600")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 600秒")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Expires")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("最后期限"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 写一个具体日期，到什么时候失效，现在基本不用了")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("案例：")]),t._v(" "),a("div",{staticClass:"language-diff line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-diff"}},[a("code",[t._v("const express= require('express')\nconst app = express()\napp.get('/x',(req,res)=>{\n"),a("span",{pre:!0,attrs:{class:"token inserted-sign inserted"}},[a("span",{pre:!0,attrs:{class:"token prefix inserted"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token line"}},[t._v(' res.set("Cache-Control","max-age=600")\n')])]),a("span",{pre:!0,attrs:{class:"token unchanged"}},[a("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[t._v(" ")]),a("span",{pre:!0,attrs:{class:"token line"}},[t._v("   res.send('x3')\n")])]),t._v("})\napp.listen(3000)\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[t._v("max-age=0 等于0的情况和no-cache的情况一样，每次都向服务器询问")]),t._v(" "),a("h4",{attrs:{id:"协商缓存1"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存1"}},[t._v("#")]),t._v(" 🍅 协商缓存1 "),a("Badge",{attrs:{text:"重要",type:"tip"}})],1),t._v(" "),a("p",[t._v("协商使用缓存，每次需要向服务器请求对比，缓存生效下不传回body")]),t._v(" "),a("p",[t._v("服务端先返回一个"),a("code",[t._v("Last-Modified")]),t._v("告诉客户端这个资源最后修改时间，然后客户端每次发请求都回带上"),a("code",[t._v("if-Modified-Since")]),t._v(";如果资源变化了，服务就会知道，就会返回新的资源和新的Last-Modified")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("返回：Last"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Modified："),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("昨天"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n请求："),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Modified"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Since："),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("昨天"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("div",{staticClass:"language-diff line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-diff"}},[a("code",[t._v("const express= require('express')\nconst app = express()\napp.set('etag',false) // 先把etag关掉，因为它也是一种缓存,现在我们只用一种，好演示一些\napp.get('/x',(req,res)=>{\nres.set(\"Last-Modified\",\"Sun Feb 28 2021 23:24:47 GMT+0800\") // 如果资源变了需要更新这个时间\n"),a("span",{pre:!0,attrs:{class:"token unchanged"}},[a("span",{pre:!0,attrs:{class:"token prefix unchanged"}},[t._v(" ")]),a("span",{pre:!0,attrs:{class:"token line"}},[t._v("   res.send('x3')\n")])]),t._v("})\napp.listen(3000)\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("h4",{attrs:{id:"协商缓存2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存2"}},[t._v("#")]),t._v(" 🍅 协商缓存2 "),a("Badge",{attrs:{text:"重要",type:"tip"}})],1),t._v(" "),a("p",[t._v("这个是用的最多的协商缓存，服务端在返回任何数据的时候，就会带上一个E-Tag；这个不用我们配置")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("返回："),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("E")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Tag"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1234")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("请求")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("None"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Match"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1234")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h4",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 🍅 总结")]),t._v(" "),a("ol",[a("li",[t._v("发布新的静态资源的时候，如何更新缓存？")])]),t._v(" "),a("p",[t._v("每次发布的文件名都不同，这是用的最多的一种策略，因为我们的静态资源在html加载，或者被js引用到了；最后把这些引用都改成新的；webpack都有这些功能。")])])}),[],!1,null,null,null);e.default=r.exports}}]);